# This should be your Ansible playbooks to provision your containers.
# An inventory will be automatically created using the names of the services
# from your container.yml file.
# Add any roles or other modules you'll need to this directory too.
# For many examples of roles, check out Ansible Galaxy: https://galaxy.ansible.com/
#

# First play updates the containers
- hosts: api-server,db
  name: Basic setup
  gather_facts: no
  tasks:
  - name: Update Cache
    raw: apt-get update -y
  - name: Raw ensure python present
    raw: apt-get install -y python python-mysqldb

#  Create the database
- hosts: db
  name: install db
  gather_facts: true
  tasks:
    - include_vars: vars.yml
    - name: Ensure that the data storage is available locally
      file:
        path: "{{ sql_data_dir }}"
        state: directory

    - name: Ensure  that the db is present
      mysql_db:
        name: fgapiserver
        #login_host: "{{ db_config.ansible_facts.ansible_docker_container.NetworkSettings.IPAddress }}"
        login_host: "{{ hostvars['db']['ansible_default_ipv4']['address'] }}"
        login_user: root
        login_password: "{{ db_root_password }}"
        state: import
        target: "{{ lookup('env','PWD')}}/roles/fgapi-db/files/fgapiserver_db.sql"
      retries: 3

#install FG API server
- hosts: api-server
  tasks:
  - name: Ensure mysql client is present
    become: true
    package:
      name: "{{ item }}"
    with_items: "{{ prereq[ansible_os_family] }}"

  - name: get the source code
    git:
      repo: https://github.com/brucellino/fgAPIServer
      dest: "{{ install_path }}"
      force: yes
      clone: yes
      update: yes

  - name: Install URLlib3 (CentOS6)
    pip:
      name: "{{ item }}"
      state: present
    with_items: "{{ extra_pips }}"
    # when:
    #   ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'
  - name: install python requirements
    become: true
    pip:
      requirements: "{{ install_path }}/requirements.txt"

  - name: Apply configuration template.
    template:
      src: fgapiserver.conf.j2
      dest: "{{ install_path }}/fgapiserver.conf"

  - name: start the server
    command: python fgapiserver.py
    args:
      chdir: "{{ install_path }}"


# install FG BackEnd.
# - hosts: gridengine
#   roles:
#     - gridengine
