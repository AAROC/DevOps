- name: do a raw install of libselinux-python
  raw: yum -y install libselinux-python
  when: ansible_os_family == 'RedHat'

- name: update the repo configuration
  copy:
    src: etc/yum.repos.d/sl6x.repo
    dest: /etc/yum.repos.d/sl6x.repo
  #        validate: 'yum update'
  tags:
    - yum
  when: ansible_os_family == 'RedHat'

- name: check connectivity
  command: /bin/ping -c 1 www.google.com
  register: hosttest
  ignore_errors: true
  changed_when: false

# - name: debug
#   debug: var=hosttest.stderr
#   when: hosttest

# This task can only work if the selinux python bindings are installed.
# this can only be installed if there is network connectivity...
# so, we need to do a raw replace of the dns server first
# - name: use Google public DNS if necessary
#   lineinfile:
#     dest: /etc/resolv.conf
#     regexp: '^nameserver'
#     line: 'nameserver 8.8.8.8'
# #  when: "'ping: unknown host www.google.com' in hosttest.stderr"
#   tags:
#     - DNS

- name: Do raw replace of nameserver
  raw: 'sed -i "s#^nameserver .*\$#nameserver 8.8.8.8#g" /etc/resolv.conf'

# SE linux is probably still enabled, so we need to do a raw install of libselinux
# - name: ensure that SELinux python bindings are installed
#   yum:
#     name: libselinux-python
#     state: installed

- name: Install libselinux
  raw: 'yum install -y libselinux-python'
  when: ansible_os_family == 'RedHat'

# at this point we might want to turn off selinux

- name: debug packages
  debug:
    var: "{{ bootstrap_prerequisites. ansible_os_family }}"

- name: Install prerequisite packages (RedHat)
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ bootstrap_prerequisites[ansible_os_family] }}"
  tags:
    - bootstrap
    - prerequisites
  when: ansible_os_family=="RedHat"

- name: Install prerequisite packages (Debian)
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ bootstrap_prerequisites[ansible_os_family] }}"
  tags:
    - bootstrap
    - prerequisites
  when: ansible_os_family=="Debian"
