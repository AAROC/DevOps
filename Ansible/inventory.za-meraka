######################################################
#
# Inventory for the CSIR C4 cluster
#
############## Cluster oriented grouping ##############
##########################################################################################
# we define overall two clusters : production and development/staging/testing 
# it is possible that we could separate the development and staging/testing clusters later
# Typically each production service has a corresponding dev version.
# BB 10/13
#############
# We also want to separate the site services from core services
# BB 11/13

# non-grid services
[CA]
security.sanren.ac.za
[dns-servers]
# we should put the dns servers in here when we need to move
# hosts in and out of DNS

[UIs]
ui-dev.c4.csir.co.za needs_certificate='false' emi_service='UI' yaim_options='-n UI'
ui-stage.sagrid.ac.za needs_certificate='false' emi_service='UI' yaim_options='-n UI'
#################
# core services #
#################

#myproxy.cern.ch
#myproxy.ct.infn.it
[myproxy-servers]
myproxy.c4.csir.co.za

# BDIIs
[top-bdiis]
top-bdii.c4.csir.co.za needs_certificate='false' emi_service='BDII_top' yaim_options='-n BDII_top'

# WMS 
[wms-servers]
wms.c4.csir.co.za needs_certificate='true' emi_service='WMS' yaim_options='-n WMS -n LB'

# LFC
[lfcs]
lfc.c4.csir.co.za needs_certificate='true' emi_service='lfc' yaim_options='-n lfc_mysql'

# FTS
[fts]
fts.c4.csir.co.za needs_certificate='true' emi_service='fts-3'

# DIRAC
[dirac]
dirac.c4.csir.co.za needs_certificate='true'

# APEL
[apel-servers]
apel-server.c4.csir.co.za needs_certificate='true'

# ARGUS
[argus-servers]
argus.c4.csir.co.za emi_service='ARGUS' yaim_options='-n ARGUS_server' needs_certificate='true'

# NAGIOS
[ngi-nagios]
nagios.c4.csir.co.za   emi_service='SAM-NAGIOS' yaim_options='-n NAGIOS -n SAM_NAGIOS' needs_certificate='true'
[vo-sagrid-nagios]
sagrid-monitoring.c4.csir.co.za

#################
# site services #
#################

# Site BDII
[site-bdiis]
site-bdii.c4.csir.co.za needs_certificate='false' emi_service='BDII_site' yaim_options='-n BDII_site'

# CREAM CE's
[cream-ces]
ce01-node001.c4.csir.co.za needs_certificate='true' emi_service='CREAM_CE' yaim_options='-n MPI_CE -n creamCE -n TORQUE_server -n TORQUE_utils'

[apel-publishers:children]
cream-ces

[storage-elements]
#se01.localdomain

# Worker Nodes
[worker-nodes]
# empty for now
[worker-nodes]
ce01-node002.c4.csir.co.za emi_service='WN' yaim_options='-n MPI_WN -n WN -n TORQUE_client'

############ grouping and children ############
# first, group by production and development 
[core-services:children]
top-bdiis
wms-servers
ngi-nagios
fts
argus-servers

[site-services:children]
site-bdiis
cream-ces
worker-nodes

############## Service oriented grouping ##############
# (here comes the magical power of ansible... Group things
# in as much as you can)


############## Middleware oriented grouping ##############

#site-bdii-servers
#cream-servers
#storage-elements
#wms-servers
#myproxy-servers
#lfc-servers
#worker-nodes
#apel-servers
#top-bdiis


[CRL]
[CRL:children]
wms-servers
lfcs
ngi-nagios
cream-ces

[za-meraka:children]
cream-ces
site-bdiis
worker-nodes
top-bdiis
wms-servers
ngi-nagios
fts
UIs
argus-servers

[nagios-servers:children]
ngi-nagios
############################ END #########################
